openapi: 3.0.0
info:
  version: 1.0.0
  title: Zuri Chat Core API (Data Endpoints)
  description: Zuri Chat is an open source slack clone. However, it offers a lot more functionality via a plugin system where each room can be provided by a different plugin provider.
  contact:
    email: developer@zuri.chat
servers:
  - description: Zuri Chat Core API
    url: 'https://api.zuri.chat/'

paths:
  /data/write:
    post:
      tags:
        - write
      description: Lets plugin post new data to DB.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataWriteRequestBody'
        required: true
      responses:
        '201':
          description: Data created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPostResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - write
      description: Updates data in databse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataWriteRequestBody'
        required: true
      responses:
        '200':
          description: Data updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPutResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /data/read/{plugin_id}/{coll_name}/{org_id}:
    get:
      tags:
        - read
      description: Retrieves data from the database
      parameters:
        - in: path
          name: plugin_id
          description: provide the ID of the plugin retrieving data.
          required: true
          schema:
            type: string
        - in: path
          name: coll_name
          description: provide the name of the collection to be read from.
          required: true
          schema:
            type: string
        - in: path
          name: org_id
          description: provide the ID of the organization which plugin belongs to.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRetrievedResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /data/delete:
    post:
      tags:
        - delete
      description: Lets plugin delete data from DB.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDeleteRequestBody'
        required: true
      responses:
        '200':
          description: Data deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataDeleteResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    DataWriteRequestBody:
      type: object
      required:
        - plugin_id
        - organization_id
        - collection_name
        - payload
      properties:
        plugin_id:
          type: string
          description: The plugin ID.
        organization_id:
          type: string
          description: The ID of the organization plugin belongs to.
        collection_name:
          type: string
          description: The name of collection to insert data into.
        bulk_write:
          type: boolean
          description: Boolean value that indicates whether many documents are to be inserted or not.
        object_id:
          type: string
          description: The ID of inserted data (to be set at server side)
        filter:
          type: object
          description: Query to be matched
        payload:
          type: object
          description: Actual data plugin wants to store in DB.

    DataDeleteRequestBody:
      type: object
      required:
        - plugin_id
        - organization_id
        - collection_name
        - payload
      properties:
        plugin_id:
          type: string
          description: The plugin ID.
        organization_id:
          type: string
          description: The ID of the organization plugin belongs to.
        collection_name:
          type: string
          description: The name of collection to insert data into.
        bulk_delete:
          type: boolean
          description: Boolean value that indicates whether many documents are to be deleted or not.
        object_id:
          type: string
          description: The ID of inserted data (to be set at server side)
        filter:
          type: object
          description: Query to be matched
        payload:
          type: object
          description: Actual data plugin wants to store in DB.

    DataPostResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            insert_count:
              type: integer
            object_id:
              type: string

    DataPutResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            matched_documents:
              type: integer
              description: Number of documents matching filter.
            modified_documents:
              type: string
              description: Number of documents modified.

    DataDeleteResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
          properties:
            deleted_count:
              type: integer
              description: Number of documents deleted.

    DataRetrievedResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            type: object
            description: object retrieved from DB.

    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
