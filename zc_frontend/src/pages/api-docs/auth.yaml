openapi: 3.0.0
info:
  version: 1.0.0
  title: Zuri Chat Core API (Authentication Endpoints)
  description: Zuri Chat is an open source slack clone. However, it offers a lot more functionality via a plugin system where each room can be provided by a different plugin provider.
  contact:
    email: developer@zuri.chat
servers:
  - description: Zuri Chat Core API
    url: 'https://api.zuri.chat/'
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authentication request to access protected resources
      requestBody:
        $ref: '#/components/requestBodies/login'
      responses:
        '200':
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/logout:
    get:
      tags:
        - Authentication
      summary: Authentication request to logout
      responses:
        '200':
          $ref: '#/components/responses/LogoutSuccessful'
        '401':
          $ref: '#/components/responses/NotAuthorizedOrNoAuthToken'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Authentication
      summary: Authentication request to logout
      responses:
        '200':
          $ref: '#/components/responses/LogoutSuccessful'
        '401':
          $ref: '#/components/responses/NotAuthorizedOrNoAuthToken'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/verify-token:
    get:
      tags:
        - Authentication
      summary: validates the user before access is granted.
      responses:
        '200':
          $ref: '#/components/responses/TokenVerified'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  responses:
    InternalServerError:
      description: Internal server error occured during operation
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 500
              message:
                type: string

    BadRequest:
      description: An incorrect client request
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              message:
                type: string

    UnprocessableEntity:
      description: server unable to process contained information, e.g API behaviour
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 422
              message:
                type: string

    NotAuthorizedOrNoAuthToken:
      description: Unauthorized Error
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 401
              message:
                type: string

    LoginSuccess:
      description: login successful
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
              - data
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                type: object
                properties:
                  session_id:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 613590fd0366b6816a0b75ee
                      first_name:
                        type: string
                        example: Johnson
                      last_name:
                        type: string
                        example: Ajayi
                      display_name:
                        type: string
                        example: samsoft
                      email:
                        type: string
                        example: hng.user01@gmail.com
                      phone:
                        type: string
                        example: 09067324567
                      status:
                        type: string
                        example: 0
                      time_zone:
                        type: string
                      created_at:
                        type: string
                        example: 2021-09-06T03:54:37.387816096Z
                      update_at:
                        type: string
                        example: 0001-01-01T00:00:00Z

    TokenVerified:
      description: Token verification successful
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
              - data
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                type: object
                properties:
                  is_verified:
                    type: boolean
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 613590fd0366b6816a0b75ee
                      first_name:
                        type: string
                        example: Johnson
                      last_name:
                        type: string
                        example: Ajayi
                      display_name:
                        type: string
                        example: samsoft
                      email:
                        type: string
                        example: hng.user01@gmail.com
                      phone:
                        type: string
                        example: 09067324567
                      status:
                        type: string
                        example: 0
                      time_zone:
                        type: string
                      created_at:
                        type: string
                        example: 2021-09-06T03:54:37.387816096Z
                      update_at:
                        type: string
                        example: 0001-01-01T00:00:00Z

    LogoutSuccessful:
      description: Logged out successfully
      content:
        application/json:
          schema:
            required:
              - code
              - message
              - data
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string

  requestBodies:
    login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/loginReqB'

  schemas:
    loginReqB:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
