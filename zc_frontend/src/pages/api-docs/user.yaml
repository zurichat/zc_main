openapi: 3.0.0
info:
  version: 1.0.0
  title: Zuri Chat Core API (Users Endpoints)
  description: Zuri Chat is an open source slack clone. However, it offers a lot more functionality via a plugin system where each room can be provided by a different plugin provider.
  contact:
    email: developer@zuri.chat
servers:
  - description: Zuri Chat Core API
    url: 'https://api.zuri.chat/'
tags:
  - name: user
    description: Controls user registration, login and password recovery
paths:
  /users:
    get:
      summary: Retrieves all users
      description: Retrieves all created users saved to the DB
      tags:
        - Users
      responses:
        '200':
          description: Returns information about all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'

    post:
      summary: Create a new user
      description: Creates a new user given a request body of required key-value pairs. Returns ID of created user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        '201':
          description: Returns ID of created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          links:
            UserID:
              operationId: getUserID
              parameters:
                user_id: $response.body#/data/InsertedID
        '400':
          description: Invalid user email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 422
                  message:
                    type: string
                    example: EOF
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{user_id}:
    patch:
      summary: Updates the details of a user
      description: Updates existing user fields - first_name, last_name, phone
      operationId: getUserID
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/user_id'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - Users

      responses:
        '200':
          description: User was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'

        '404':
          description: No user with the specified user_id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Someting went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Retrieves the information about a user
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/user_id'

      responses:
        '200':
          description: Returns the full info about a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'

        '404':
          description: No user with the specified user_id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

      tags:
        - Users

    delete:
      summary: Deactivates a user's account
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/user_id'

      tags:
        - Users

      responses:
        '200':
          description: User was successfully deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUser'
        '404':
          description: No user with the specified user_id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/search/{query}:
    get:
      summary: Retrieves all users that match the given query parameter
      description: Retrieves all created users saved to the DB
      security:
        - BearerAuth: []
      tags:
        - Users
      parameters:
        - in: path
          name: query
          required: true
          schema:
            oneOf:
              - $ref: '#/components/parameters/first_name'
              - $ref: '#/components/parameters/last_name'
              - $ref: '#/components/parameters/email'
      responses:
        '200':
          description: User found or empty result if not found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UsersResponse'

components:
  parameters:
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: string

    organization_id:
      in: path
      name: organization_id
      required: true
      schema:
        type: integer
    first_name:
      in: path
      name: first_name
      required: true
      schema:
        type: string
        example: Jane

    last_name:
      in: path
      name: last_name
      required: true
      schema:
        type: string
        example: Doe

    email:
      in: path
      name: email
      required: true
      schema:
        type: string
        example: janedoe@email.com
  schemas:
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: number
        password:
          type: string
        email:
          type: string
        email_verified:
          type: boolean

    UsersResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/FullUser'

    FullUser:
      type: object
      properties:
        id:
          type: string
          example: 61374b5e7ccea12370c5adec
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        email:
          type: string
          example: janedoe@email.com
        password:
          type: string
          example: $2a$14$Nem0fMPQbLUOOcZgaLt/WOUoQDs/Cb9EhX71440ROLanZAom0Da5G
        phone:
          type: string
          example: 0123456789
        settings:
          type: string
          example: null
        time_zone:
          type: string
          example: ''
        created_at:
          type: string
          example: 2021-09-07T12:22:06.932180616+01:00
        updated_at:
          type: string
          example: 0001-01-01T00:00:00Z
        deleted_at:
          type: string
          example: 0001-01-01T00:00:00Z
        workspaces:
          type: string
          example: null
        workspace_profiles:
          type: string
          example: null
        email_verification:
          type: object
          properties:
            expired_at:
              type: string
              example: 0001-01-01T00:00:00Z
            token:
              type: string
              example: null
            verified:
              type: boolean
              example: false
            id:
              type: string
              example: 61374b5e7ccea12370c5adec
        password_resets:
          type: string
          example: null

    CreateUserResponse:
      type: object
      properties:
        status:
          type: number
          example: 200
        message:
          type: string
          example: user created
        data:
          type: object
          properties:
            InsertedID:
              type: string
              example: 6137a5af52efebbea2739c71

    UpdateUser:
      type: object
      properties:
        status:
          type: number
          example: 200
        message:
          type: string
          example: user created
        data:
          type: object
          properties:
            MatchedCount:
              type: integer
              example: 1
            ModifiedCount:
              type: integer
              example: 1
            UpsertedCount:
              type: integer
              example: 0
            UpsertedID:
              type: string
              example: null

    DeleteUser:
      type: object
      properties:
        status:
          type: number
          example: 200
        message:
          type: string
          example: user deleted successfully
        data:
          type: string
          example: null

    Error:
      required:
        - status
        - message
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string

    VerifyEmail:
      type: object
      properties:
        status:
          type: number
          example: 400
        message:
          type: string
          example: email address is not valid

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
