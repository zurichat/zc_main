openapi: 3.0.0
info:
  version: 1.0.0
  title: Zuri Chat Core API (Organization Endpoints)
  description: Zuri Chat is an open source slack clone. However, it offers a lot more functionality via a plugin system where each room can be provided by a different plugin provider.
  contact:
    email: developer@zuri.chat
servers:
  - description: Zuri Chat Core API
    url: 'https://api.zuri.chat/'

paths:
  /organizations:
    get:
      tags:
        - Organization
      summary: Displays a list of organizations
      security:
        - cookieAuth: []
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/getOrgsResponse'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Organization
      summary: Create an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/orgCreateRequestBody'

      responses:
        '201':
          $ref: '#/components/responses/resourceCreated'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}:
    get:
      tags:
        - Organization
      summary: Get an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/getOrgResponse'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Organization
      summary: Delete organization information
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'

      responses:
        '200':
          $ref: '#/components/responses/resourceDeleted'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/url:
    patch:
      tags:
        - Organization
      summary: Update organization url
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              type: object
              example: { 'url': 'https://hngworkspace.zuri.chat' }
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/url/{workspace_url}:
    get:
      tags:
        - Organization
      summary: Get an organization by its URL
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - in: path
          name: workspace_url
          required: true
          schema:
            type: string
            example: 'hngi8.zuri.chat'
      responses:
        '200':
          $ref: '#/components/responses/getOrgResponse'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/name:
    patch:
      tags:
        - Organization
      summary: Update organization name
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              type: object
              example: { 'organization_name': 'hngworkspace' }
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/logo:
    patch:
      tags:
        - Organization
      summary: Update organization logo
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              type: object
              example: { 'url': 'https://image.storage/image.png' }
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members:
    get:
      tags:
        - Organization-Member
      summary: Get a list of members in an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/getMembersResponse'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Organization-Member
      summary: Add user to an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              properties:
                user_id:
                  type: integer
                  description: This is the id of the user to be added to the organization
                  example: '6137d69b21d3c78fc9a84bdf'
      responses:
        '201':
          $ref: '#/components/responses/resourceCreated'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members/{member_id}:
    get:
      tags:
        - Organization-Member
      summary: Get a record of a member in an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/getMemberResponse'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Organization-Member
      summary: Update user
      description: This endpoint will be used to update the user's organization information. e.g user roles and permissions
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: The structure for the entire request
        required: true
        content:
          'application/json':
            schema:
              properties:
                data:
                  type: string
                  description: Data to be updated
                  example: 2
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Organization-Member
      summary: Delete user
      description: Remove a user from an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/plugins:
    get:
      tags:
        - Organization-Plugin
      summary: Get all plugins from an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      responses:
        '200':
          $ref: '#/components/responses/getPluginsResponse'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Organization-Plugin
      summary: Add a plugin to an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              properties:
                plugin_id:
                  type: integer
                  description: This is the id of the plugin to be added to the organization
                  example: '6137d69b21d3c78fc9a84bdf'
                user_id:
                  type: integer
                  description: This is the id of the user adding a plugin to the organization
                  example: '6137d69b21d3c78fc9a84bdf'
      responses:
        '201':
          $ref: '#/components/responses/resourceCreated'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members/{member_id}/status:
    patch:
      tags:
        - Organization-Member
      summary: Update member status for an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              properties:
                status:
                  type: string
                  description: Status to be updated
                  example: 'Available'
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members/{member_id}/photo:
    patch:
      tags:
        - Organization-Member
      summary: Update member profile picture for an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              type: object
              example: { 'image_utl': 'https://image.storage/image.png' }
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members/{member_id}/profile:
    patch:
      tags:
        - Organization-Member
      summary: Update member profile for an organization
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              properties:
                data:
                  type: string
                  description: Data to be updated
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members/{member_id}/presence:
    post:
      tags:
        - Organization-Member
      summary: Toggle a member presence (Away/Active)
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

  /organizations/{organization_id}/members/{member_id}/settings:
    patch:
      tags:
        - Organization-Member
      summary: update a member settings field(s)
      security:
        - cookieAuth: []
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/organization_id'
        - $ref: '#/components/parameters/member_id'
      requestBody:
        description: The structure for the entire request
        content:
          'application/json':
            schema:
              type: object
              example:
                {
                  'global_settings':
                    {
                      'allow_user_add_plugins': true,
                      'allow_only_admin_invite': true
                    },
                  'plugin_settings':
                    { 'chess_plugin': { 'allow_in_every_channel': false } }
                }
      responses:
        '200':
          $ref: '#/components/responses/resourceUpdated'

        '401':
          $ref: '#/components/responses/UnauthorizedError'

        '400':
          $ref: '#/components/responses/BadRequest'

        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    member_id:
      in: path
      name: member_id
      required: true
      schema:
        type: string
        example: '6137d69b21d3c78fc9a84bdf'

    organization_id:
      in: path
      name: organization_id
      required: true
      schema:
        type: string
        example: '6137d69b21d3c78fc9a84bdf'

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 401
              message:
                type: string

    InternalServerError:
      description: Internal server error occured during operation
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 500
              message:
                type: string

    BadRequest:
      description: Bad Request, e.g wrong user id
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              message:
                type: string

    resourceCreated:
      description: Successfully created the resource
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 201
              message:
                type: string
              data:
                type: object
                example: { 'InsertedID': '6137d69b21d3c78fc9a84bdf' }

    resourceDeleted:
      description: Successfully deleted the resource
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
                example: 'resource deleted successfully'

    resourceUpdated:
      description: Successfully updated the resource
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
                example: 'resource updated successfully'

    getOrgResponse:
      description: Successfully retrieve the resource
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                $ref: '#/components/schemas/Organization'

    getOrgsResponse:
      description: Successfully returned list of organizations, including an empty array if there are no organizations
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'

    getMemberResponse:
      description: Successfully returned record of a member in an organization
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                $ref: '#/components/schemas/Member'

    getMembersResponse:
      description: Successfully returned list of members in an organization, including an empty array if there are no members
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Member'

    getPluginsResponse:
      description: Successfully returned list of plugins from an organization, including an empty array if there are no plugins
      content:
        application/json:
          schema:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Plugin'

  requestBodies:
    orgCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgCreateRB'

  schemas:
    Member:
      type: object
      properties:
        _id:
          type: string
          example: '6137d69b21d3c78fc9a84bdf'
        orgId:
          type: string
          example: '6137d69b21d3c78fc9a84bdf'
        files:
          type: object
        image_url:
          type: string
          example: 'https://image.location/image.png'
        name:
          type: string
        status:
          type: string
        email:
          type: string
          format: email
        display_name:
          type: string
        bio:
          type: string
        pronouns:
          type: string
        phone:
          type: string
        time_zone:
          type: string
        joined_at:
          type: string
          format: date

    Organization:
      type: object
      properties:
        _id:
          type: string
          example: '6137d69b21d3c78fc9a84bdf'
        name:
          type: string
          example: 'HNG'
        creator_email:
          type: string
          example: 'hng@email.com'
        creator_id:
          type: string
          example: '6137d69b21d3c78fc9a84bdf'
        logo_url:
          type: string
          example: 'hng.zuri.chat'
        created_at:
          type: string
          format: date
        deleted_at:
          type: string
          format: date
        organization_settings:
          type: string
          example:
            {
              'global_settings':
                {
                  'allow_user_add_plugins': true,
                  'allow_only_admin_invite': true
                },
              'plugin_settings':
                { 'chess_plugin': { 'allow_in_every_channel': false } }
            }

    OrgCreateRB:
      description: The structure for the create organization request
      type: object
      properties:
        creator_email:
          type: string
          description: Email of the owner of the organization
          example: 'hng@email.com'

    Plugin:
      type: object
      properties:
        plugin_id:
          type: string
          example: '6137d69b21d3c78fc9a84bdf'
        user_id:
          type: string
          example: '6137d69b21d3c78fc9a84bdf'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
